{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "RestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "FlightsApi"
      }
    },
    "RestApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": [
        "FlightsGetMethod",
        "FlightsPostMethod",
        "FlightsPutMethod",
        "FlightsDeleteMethod",
        "FlightsOptionsMethod",
        "UsersGetMethod",
        "UsersPutMethod",
        "UsersOptionsMethod"
      ],
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "StageName": "prod"
      }
    },
    "FlightsResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "flights"
      }
    },
    "FlightsGetMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ResourceId": {
          "Ref": "FlightsResource"
        },
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getFlights/invocations"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "400",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "500",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "FlightsPostMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ResourceId": {
          "Ref": "FlightsResource"
        },
        "HttpMethod": "POST",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:postFlights/invocations"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "400",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "500",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "FlightsPutMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ResourceId": {
          "Ref": "FlightsResource"
        },
        "HttpMethod": "PUT",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putFlights/invocations"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "400",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "500",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "FlightsDeleteMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ResourceId": {
          "Ref": "FlightsResource"
        },
        "HttpMethod": "DELETE",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:deleteFlights/invocations"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "400",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "500",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "FlightsOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ResourceId": {
          "Ref": "FlightsResource"
        },
        "HttpMethod": "OPTIONS",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseTemplates": {
                "application/json": ""
              },
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "LambdaInvokePermissionGet": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": "getFlights",
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/GET/flights"
        }
      }
    },
    "LambdaInvokePermissionPost": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": "postFlights",
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/POST/flights"
        }
      }
    },
    "LambdaInvokePermissionPut": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": "putFlights",
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/PUT/flights"
        }
      }
    },
    "LambdaInvokePermissionDelete": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": "deleteFlights",
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/DELETE/flights"
        }
      }
    },
    "UsersResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "users"
      }
    },
    "UsersGetMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ResourceId": {
          "Ref": "UsersResource"
        },
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getUsers/invocations"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "UsersPutMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "RestApi" },
        "ResourceId": { "Ref": "UsersResource" },
        "HttpMethod": "PUT",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putUsers/invocations"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "400",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          },
          {
            "StatusCode": "500",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "UsersOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ResourceId": {
          "Ref": "UsersResource"
        },
        "HttpMethod": "OPTIONS",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseTemplates": {
                "application/json": ""
              },
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "LambdaInvokePermissionGetUsers": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": "getUsers",
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/GET/users"
        }
      }
    },
    "LambdaInvokePermissionPutUsers": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": "putUsers",
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/PUT/users"
        }
      }
    }
  },
  "Outputs": {
    "ApiId": {
      "Value": {
        "Ref": "RestApi"
      },
      "Description": "API Gateway ID"
    },
    "ApiInvokeUrl": {
      "Value": {
        "Fn::Sub": "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
      },
      "Description": "Public invoke URL"
    }
  }
}